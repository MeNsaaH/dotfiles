---
- name: Check {{ item.name }} fonts installed
  find:
    path: "{{ fonts_dir }}"
    patterns: "{{ item.name }}*.ttf,{{ item.name }}*.otf"
  register: installed_fonts
  tags: ["fonts"]

- name: Set {{ item.name }} Fonts install variable
  set_fact:
    font_not_installed: "{{  installed_fonts.files |length <= 0 }}"
  tags: ["fonts"]

- name: Create /tmp/{{ item.name }} directory if not exist
  file:
    path: "/tmp/{{ item.name }}"
    state: directory
  tags: ["fonts"]
  when: font_not_installed

- name: Download {{ item.name }} Fonts (git repo)
  git:
    repo: "{{ item.repo }}"
    dest: "/tmp/{{ item.name }}"
    accept_hostkey: "true"
    depth: 1
  when:
    - item.repo|default ("") != ""
    - font_not_installed
  tags: ["fonts"]

- name: Download {{ item.name }} Fonts (archive URL)
  unarchive:
    src: "{{ item.url }}"
    dest: "/tmp/{{ item.name }}"
    remote_src: yes
    creates: /tmp/{{ item.name }}/{{ item.dirs }}
  when:
    - item.url|default ("") != ""
    - font_not_installed
  tags: ["fonts"]

- name: set fact
  set_fact:
    font_dirs: "{{ font_dirs | default([]) + ['/tmp/' ~ item.name ~ '/' ~ each.0 ~'/*.'~ each.1] }}"
  loop: "{{  item.dirs | product(['ttf', 'otf'])  }}"
  loop_control:
    loop_var: each
  when: font_not_installed
  tags: ["fonts"]

- name: Install {{ item.name }} Font
  copy:
    src: "{{ item }}"
    dest: "{{ fonts_dir }}"
  with_fileglob: "{{ font_dirs }}"
  when:
    - font_not_installed
    - '"Windows" not in item'
  tags: ["fonts"]
