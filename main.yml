---
- hosts: all

  vars_files:
    - default-config.yml
    - vars/{{ ansible_distribution }}.yml

  roles:
    - role: elliotweiser.osx-command-line-tools
      when:
        - ansible_distribution == "MacOSX"
    - role: geerlingguy.mac.homebrew
      when:
        - ansible_distribution == "MacOSX"
      tags: ["homebrew"]
    - role: geerlingguy.mac.mas
      when:
        - mas_installed_apps or mas_installed_app_ids
        - ansible_distribution == "MacOSX"
      tags: ["mas"]
    - role: geerlingguy.mac.dock
      tags: ["dock"]
      when:
        - configure_dock
        - ansible_distribution == "MacOSX"

  tasks:
    - import_tasks: tasks/extra-packages.yml
      tags: ["extra-packages"]

    - name: Fonts installation
      include_tasks: "tasks/fonts.yml"
      vars:
        font: "{{ item }}"
      loop: "{{ fonts }}"
      tags: ["fonts"]

    - include_tasks: tasks/dotfiles.yml
      tags: ["dotfiles", "zsh", "vim"]
      loop:
        - "generic"
        - "{{ ansible_distribution }}"

    - name: Setup ZSH and ohmyzsh
      import_tasks: tasks/zsh.yml
      tags: ["zsh"]

    - name: Setup vim plugins
      block:
        - name: Ensure vundle repository is cloned locally and installed.
          git:
            repo: "https://github.com/VundleVim/Vundle.vim.git"
            dest: "{{ ansible_env.HOME }}/.vim/bundle/Vundle.vim"
            accept_hostkey: "true"

        - name: Install vim plugins
          shell: "vim +PluginInstall +qall"
          args:
            executable: /bin/bash
      tags: ["vim"]

    - name: Setup iterm2
      import_tasks: tasks/terminal.yml
      when:
        - ansible_distribution == "MacOSX"
      tags: ["iterm"]

    - name: Setup kubectl and kubernetes components
      tags: ["kubectl", "k8s"]
      block:
        - name: Setting krew name
          set_fact:
            krew: krew-{{ ansible_system |lower }}_{{ "amd64" if ansible_architecture == "x86_64" else "arm64" if ansible_architecture == "arm64" else "" }}
        - name: Download and Unarchive krew
          unarchive:
            src: https://github.com/kubernetes-sigs/krew/releases/latest/download/{{ krew }}.tar.gz
            dest: /tmp/
            remote_src: yes
            creates: /tmp/{{ krew }}
        - name: Ensure krew is installed.
          shell: |
            /tmp/{{ krew }} install krew
          args:
            executable: /bin/bash
            creates: "{{ ansible_env.HOME }}/.krew/bin/kubectl-krew"

        - name: install kubectl plugins
          shell: "/tmp/{{ krew }} install {{ item }}"
          args:
            creates: "{{ ansible_env.HOME }}/.krew/bin/kubectl-{{ item | replace ('-', '_') }}"
          loop: "{{ kubectl_plugins }}"

    - name: ensure fzf completions are installed.
      shell: $(brew --prefix)/opt/fzf/install
      args:
        creates: "{{ ansible_env.HOME }}/.fzf.zsh"

    - name: Install gcloud.
      import_tasks: tasks/gcloud.yml
      tags: ["gcloud"]
